variables:
    SCHEMA: "C128-keyboard.kicad_sch"
    BOARD: "C128-keyboard.kicad_pcb"
    DIR: "outputs"

default:
  timeout: 5m
  image: setsoft/kicad_auto:ki6
  # artifacts:
    # exclude:
    # - $OUTDIR/**/*.ogv

stages:
  - check
  - export
  - publish
 
# JOBS
 
# runs design checks
ERC:
  stage: check
  script:
      - kibot -c kibot.yml -e $SCHEMA -b $BOARD -d $DIR -s run_drc -v -i
  artifacts:
    when: always
    name: $CI_PROJECT_NAME $CI_JOB_NAME
    paths:
     - $DIR/*-erc.txt
 
DRC:
  stage: check
  allow_failure: true
  script:
      - kibot -c kibot.yml -e $SCHEMA -b $BOARD -d $DIR -s run_erc -v -i
  artifacts:
    when: always
    name: $CI_PROJECT_NAME $CI_JOB_NAME
    paths:
      - $DIR/*-drc.txt

# documentation
docs:
  needs: [ERC]
  stage: export
  allow_failure: true
  script:
    - kibot -c kibot.yml -e $SCHEMA -b $BOARD -d $DIR -s run_erc,run_drc -v print_sch bom ibom #pcb_top_pdf pcb_bot_pdf
  artifacts:
    name: $CI_PROJECT_NAME $CI_JOB_NAME
    paths:
      - $DIR/docs/*

# fabrications
gerbers:
  needs: [DRC]
  stage: export
  allow_failure: false
  script:
    - kibot -c kibot.yml -e $SCHEMA -b $BOARD -d $DIR -s run_erc,run_drc -v jlc_zip
  artifacts:
    name: $CI_PROJECT_NAME $CI_JOB_NAME
    paths:
      - $DIR/gerbers/*

# render
render:
  needs: [DRC]
  stage: export
  allow_failure: true
  script:
    - kibot -c kibot.yml -e $SCHEMA -b $BOARD -d $DIR -s run_erc,run_drc -v render_top pcb_top_img pcb_bot_img
#  after_script:
#    - mv img/* .
  artifacts:
    name: $CI_PROJECT_NAME $CI_JOB_NAME
    paths:
      - $DIR/img/*

# upload assets
upload:
  dependencies: [gerbers, docs, render]
  stage: publish
#  rules:
#    - if: $CI_COMMIT_TAG
  script:
    # - mkdir -p img/render img/pcb
    - mv C128-keyboard.kicad_* .
    # - mv $PROJECT .
  artifacts:
    name: "$CI_PROJECT_NAME pcb $CI_COMMIT_TAG"
    paths:
      - $DIR/docs/**/*
      - $DIR/img/**/*
      - $DIR/gerbers/**/*
